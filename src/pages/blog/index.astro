---
import { getCollection } from 'astro:content';
import BaseLayout from '@/layouts/BaseLayout.astro';
import FormattedDate from '@/components/FormattedDate.astro';
import { useTranslations } from '@/utils/i18n';

const t = useTranslations('en');
const posts = (await getCollection('blog'))
  .filter(post => !post.id.startsWith('fr/'))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<BaseLayout
  title="Blog - AI & Machine Learning"
  description="Explore the latest articles about artificial intelligence and machine learning"
>
  <div class="blog-header">
    <div class="container">
      <h1 class="page-title">Blog</h1>
      <p class="page-subtitle">
        Explore the latest insights in artificial intelligence and machine learning
      </p>
    </div>
  </div>

  <section class="blog-posts">
    <div class="container">
      <div class="posts-grid">
        {posts.map((post) => (
          <article class="post-card">
            <a href={`/blog/${post.slug}/`} class="post-link">
              {post.data.heroImage && (
                <div class="post-image">
                  <img 
                    src={post.data.heroImage} 
                    alt={post.data.title}
                    loading="lazy"
                    decoding="async"
                  />
                </div>
              )}
              <div class="post-content">
                <h2 class="post-title">{post.data.title}</h2>
                <p class="post-description">{post.data.description}</p>
                <div class="post-meta">
                  <div class="meta-left">
                    <time datetime={post.data.pubDate.toISOString()}>
                      <FormattedDate date={post.data.pubDate} />
                    </time>
                    <span class="author">{post.data.author}</span>
                  </div>
                  <div class="meta-right">
                    {post.data.readingTime && (
                      <span class="reading-time">
                        {post.data.readingTime} {t('blog.readingTime')}
                      </span>
                    )}
                  </div>
                </div>
                {post.data.tags && post.data.tags.length > 0 && (
                  <div class="post-tags">
                    {post.data.tags.map((tag) => (
                      <span class="tag">{tag}</span>
                    ))}
                  </div>
                )}
              </div>
            </a>
          </article>
        ))}
      </div>
    </div>
  </section>
</BaseLayout>

<style>
  .blog-header {
    padding: 3rem 0;
    background: linear-gradient(135deg, var(--color-bg) 0%, var(--color-bg-secondary) 100%);
    text-align: center;
  }

  .page-title {
    font-size: 3rem;
    font-weight: 900;
    margin-bottom: 1rem;
    background: linear-gradient(135deg, var(--color-primary) 0%, var(--color-secondary) 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .page-subtitle {
    font-size: 1.25rem;
    color: var(--color-text-light);
    max-width: 600px;
    margin: 0 auto;
    line-height: 1.6;
  }

  .blog-posts {
    padding: 4rem 0;
  }

  .posts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: 2rem;
  }

  .post-card {
    background: white;
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-md);
    overflow: hidden;
    transition: all 0.3s ease;
    border: 1px solid var(--color-border);
    height: fit-content;
  }

  .post-card:hover {
    transform: translateY(-4px);
    box-shadow: var(--shadow-lg);
  }

  .post-link {
    display: block;
    text-decoration: none;
    color: inherit;
  }

  .post-image {
    height: 220px;
    overflow: hidden;
  }

  .post-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .post-card:hover .post-image img {
    transform: scale(1.05);
  }

  .post-content {
    padding: 1.5rem;
  }

  .post-title {
    font-size: 1.5rem;
    font-weight: 700;
    line-height: 1.3;
    margin-bottom: 0.75rem;
    color: var(--color-text);
  }

  .post-description {
    color: var(--color-text-light);
    line-height: 1.6;
    margin-bottom: 1.25rem;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .post-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
    font-size: 0.875rem;
    color: var(--color-text-muted);
  }

  .meta-left {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  .author {
    font-weight: 600;
    color: var(--color-text-light);
  }

  .reading-time {
    font-weight: 500;
  }

  .post-tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .tag {
    background: var(--color-primary-light);
    color: var(--color-primary-dark);
    padding: 0.25rem 0.75rem;
    border-radius: var(--radius-md);
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  @media (max-width: 768px) {
    .blog-header {
      padding: 2rem 0;
    }

    .page-title {
      font-size: 2.5rem;
    }

    .page-subtitle {
      font-size: 1.125rem;
    }

    .blog-posts {
      padding: 2rem 0;
    }

    .posts-grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }

    .post-image {
      height: 180px;
    }

    .post-meta {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }

    .meta-right {
      align-self: flex-end;
    }
  }

  @media (max-width: 480px) {
    .posts-grid {
      grid-template-columns: 1fr;
    }

    .post-content {
      padding: 1rem;
    }
  }
</style>